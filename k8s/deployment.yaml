apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql-db
  namespace: _{_NAMESPACE_}_
spec:
  serviceName: postgresql-db-service
  selector:
    matchLabels:
      app: postgresql-db
  replicas: 1
  template:
    metadata:
      labels:
        app: postgresql-db
    spec:
      terminationGracePeriodSeconds: 10
      initContainers:
      - name: init-db
        image: postgres:latest
        command: ['sh', '-c', 'until pg_isready -h postgresql-db-service -U postgres; do echo waiting for database; sleep 2; done; psql -h postgresql-db-service -U postgres -c "CREATE DATABASE webapp;"; psql -h postgresql-db-service -U postgres -d webapp -c "CREATE TABLE IF NOT EXISTS users (id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, password VARCHAR(255) NOT NULL);"']
        env:
        - name: PGPASSWORD
          value: "Test@123"  # Use the same password as in the main container
      containers:
      - name: postgresql-db
        image: postgres:latest
        ports:
        - containerPort: 5432
          name: post-ser
        volumeMounts:
        - name: postgresql-db-disk
          mountPath: /data
        env:
        - name: POSTGRES_USER
          value: "postgres"
        - name: POSTGRES_PASSWORD
          value: "Test@123"
        - name: PGDATA
          value: /data/pgdata
  volumeClaimTemplates:
  - metadata:
      name: postgresql-db-disk
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: local-storage
      resources:
        requests:
          storage: 1Gi
